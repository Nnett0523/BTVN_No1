<html>
	<head>
		<title>Các ngôn ngữ lập trình dành cho người bắt đầu</title>
		<meta charset="utf-8">
	</head>
	
	<body>
	<h1>Các ngôn ngữ dành cho người bắt đầu</h1>
	<h4>Nếu bạn đang nghĩ đến việc học lập trình, thì ngôn ngữ bạn quyết định chọn để bắt đầu phụ thuộc rất nhiều vào cái mà bạn đang cố gắng học, cái mà bạn muốn làm với kỹ năng đó, và cái đích cuối cùng mà bạn muốn đi tới. Tuy nhiên, một số ngôn ngữ lập trình dễ học hơn những ngôn ngữ khác, và có một cộng đồng tích cực trong việc dạy hoặc đưa ra nhiều các kỹ năng hữu ích một khi bạn đã học chúng. Đây là 5 ngôn ngữ tốt nhất, dựa trên sự đề cử của chính các bạn độc giả.</h4>
	<h2>1. Java</h2>
	<p>Ngôn ngữ <b>Java</b> của hãng <i>Oracle</i> là một trong những ngôn ngữ lập trình có chỗ đứng lâu nhất, bền bỉ và có tầm ảnh hưởng nhất. Bạn sẽ tìm thấy Java tại lõi của các ứng dụng trong và ngoài môi trường web, trên tất cả các nền tảng, các hệ điều hành và các thiết bị khác nhau. Nó là một ngôn ngữ lập trình hướng đối tượng, có đặc trưng sâu sắc dựa trên lớp (class-based), được thiết kế để có thể hoạt động được trên nhiều nền tảng nhất có thể. Vì lý do đó, nó cũng là một trong những ngôn ngữ lập trình phổ biến nhất thế giới, điều đó khiến nó trở nên vô cùng giá trị để học nếu bạn đang có hứng thú trong việc học lập trình. Nhược điểm của Java đó là để đảm bảo khả năng có thể chạy được ở nhiều nơi, nên nó tương đối khó nắm bắt để lập trình một cách hiệu quả và năng suất.</p>
	<h2>2. Ruby</h2>
	<p><strong>Ruby</strong> là một ngôn ngữ <b>lập trình hướng đối tượng</b>, dynamic, mã nguồn mở được phát triển bởi nhà khoa học máy tính người Nhật Bản là <em>Yukihiro Matsumoto</em> vào những năm 90s của thế kỷ trước, điều đó khiến cho nó trở thành một trong những ngôn ngữ lập trình tuổi đời còn ít nhưng lại được sử dụng rộng rãi. <b>Ruby</b> được thiết kế có cú pháp dễ đọc và dễ viết đối với con người, mà không cần thiết phải học một số lượng lớn những dòng lệnh và những "từ điển" chuyên biệt khi mới bắt đầu. Trong khi bản thân ngôn ngữ này là hướng đối tượng, nhưng nó cũng hỗ trợ lập trình thủ tục, chức năng và mệnh lệnh (imperative), một trong những yếu tố khiến nó đặc biệt linh hoạt.</p>
	<h2>3. Python</h2>
	<p>Khi mọi người bàn luận về những ngôn ngữ lập trình nên học đầu tiên và ngôn ngữ nào dễ dàng hơn cho mọi người có thể học nhanh chóng, <strong>Python</strong> chắc chắn là một lựa chọn. Nó được phát triển từ những năm 80s bởi <i>Guido van Rossum</i>, người sau đó đã quản lý ngôn ngữ này thông qua tổ chức phi lợi nhuận <em>Python Software Foundation</em>, phục vụ như là đơn vị quản lý của ngôn ngữ này, Python là <i>ngôn ngữ mã nguồn mở</i> và sử dụng miễn phí, thậm chí cho các ứng dụng thương mại. Python thường được sử dụng và xem như là một ngôn ngữ kịch bản, cho phép các lập trình viên tạo ra một số lượng lớn code dễ đọc trong một khoảng thời gian ngắn, nhưng nó cũng là một ngôn ngữ dynamic, hỗ trợ hướng đối tượng, thủ tục, và có phong cách lập trình chức năng như những ngôn ngữ khác. Bởi <b>tính mềm dẻo</b> của nó, <b>Python</b> là một trong những ngôn ngữ lập trình bậc cao được sử dụng rộng rãi nhất ngày nay.</p>
	<h2>4. C/C++</h2>
	<p> <strong>C</strong> là ngôn ngữ lập trình mệnh lệnh được sử dụng cực kỳ rộng rãi, đa mục đích; có một tầm ảnh hưởng lớn đến hầu hết các ngôn ngữ lập trình đi sau nó. <strong>C++</strong> mặt khác còn đi một bước xa hơn trong việc bổ sung các đặc trưng hướng đối tượng class đến ngôn ngữ này, đi kèm với các hàm ảo và template. <b>C++ là một trong những ngôn ngữ lập trình phổ biến nhất trên thế giới</b>, và ngày nay nó vẫn còn được sử dụng rộng rãi trong mọi thứ từ video games cho đến các phần mềm thương mại. Việc học C++ có một chút khó khăn hơn so với C, mặc dù nhiều người sẽ tranh cãi rằng không có lý do gì mà lại bắt đầu học lập trình bằng ngôn ngữ C cả.</p>
	<h2>5. Javascript</h2>
	<p>Bạn đừng nhầm lẫn <b>JavaScript</b> với <b>Java</b>, đây là <strong>một ngôn ngữ kịch bản</strong> đã được phát triển vào những năm 90s bởi <i>Brendan Eich</i>, cựu nhân viên của hãng <em>Netscape Communications</em> và giờ là <i>Mozilla Foundation</i>. <b>JavaScript</b> là một trong những công nghệ nền tảng mà web dựa trên đó. Đừng để tôi đánh lừa bạn - JavaScript tồn tại bên ngoài các trình duyệt, nhưng <b>phần lớn nằm trong ngữ cảnh của các ứng dụng và dịch vụ kết nối</b>. Ngôn ngữ này tự bản thân nó là dynamic, và cung cấp cho các lập trình viên sự mềm dẻo để sử dụng phong cách lập trình hướng đối tượng (và bản thân ngôn ngữ này hầu như là hướng đối tượng) cũng như là hướng chức năng và mệnh lệnh. Nó tiếp nhận nhiều cú pháp từ ngôn ngữ C, và nếu bạn lên kế hoạch để làm bất kỳ sự phát triển cho web, thì việc học JavaScript nên nằm trong danh sách của bạn.</p>
	</body>
	<p>Copyright <sub>by Tự học lập trình</sub> &copy; <sup>2017</sup> </p>
</html>
